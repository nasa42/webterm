// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import { A2rError } from './a2r-error.js';
import { A2rToFrontend } from './a2r-to-frontend.js';


export enum A2rRootPayload {
  NONE = 0,
  Error = 1,
  ToFrontend = 2
}

export function unionToA2rRootPayload(
  type: A2rRootPayload,
  accessor: (obj:A2rError|A2rToFrontend) => A2rError|A2rToFrontend|null
): A2rError|A2rToFrontend|null {
  switch(A2rRootPayload[type]) {
    case 'NONE': return null; 
    case 'Error': return accessor(new A2rError())! as A2rError;
    case 'ToFrontend': return accessor(new A2rToFrontend())! as A2rToFrontend;
    default: return null;
  }
}

export function unionListToA2rRootPayload(
  type: A2rRootPayload, 
  accessor: (index: number, obj:A2rError|A2rToFrontend) => A2rError|A2rToFrontend|null, 
  index: number
): A2rError|A2rToFrontend|null {
  switch(A2rRootPayload[type]) {
    case 'NONE': return null; 
    case 'Error': return accessor(index, new A2rError())! as A2rError;
    case 'ToFrontend': return accessor(index, new A2rToFrontend())! as A2rToFrontend;
    default: return null;
  }
}
