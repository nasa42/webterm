// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import * as flatbuffers from 'flatbuffers';

export class A2fPlainAuthResult {
  bb: flatbuffers.ByteBuffer|null = null;
  bb_pos = 0;
  __init(i:number, bb:flatbuffers.ByteBuffer):A2fPlainAuthResult {
  this.bb_pos = i;
  this.bb = bb;
  return this;
}

static getRootAsA2fPlainAuthResult(bb:flatbuffers.ByteBuffer, obj?:A2fPlainAuthResult):A2fPlainAuthResult {
  return (obj || new A2fPlainAuthResult()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

static getSizePrefixedRootAsA2fPlainAuthResult(bb:flatbuffers.ByteBuffer, obj?:A2fPlainAuthResult):A2fPlainAuthResult {
  bb.setPosition(bb.position() + flatbuffers.SIZE_PREFIX_LENGTH);
  return (obj || new A2fPlainAuthResult()).__init(bb.readInt32(bb.position()) + bb.position(), bb);
}

successAuth():boolean {
  const offset = this.bb!.__offset(this.bb_pos, 4);
  return offset ? !!this.bb!.readInt8(this.bb_pos + offset) : false;
}

sessionId():bigint {
  const offset = this.bb!.__offset(this.bb_pos, 6);
  return offset ? this.bb!.readUint64(this.bb_pos + offset) : BigInt('0');
}

static startA2fPlainAuthResult(builder:flatbuffers.Builder) {
  builder.startObject(2);
}

static addSuccessAuth(builder:flatbuffers.Builder, successAuth:boolean) {
  builder.addFieldInt8(0, +successAuth, +false);
}

static addSessionId(builder:flatbuffers.Builder, sessionId:bigint) {
  builder.addFieldInt64(1, sessionId, BigInt('0'));
}

static endA2fPlainAuthResult(builder:flatbuffers.Builder):flatbuffers.Offset {
  const offset = builder.endObject();
  return offset;
}

static createA2fPlainAuthResult(builder:flatbuffers.Builder, successAuth:boolean, sessionId:bigint):flatbuffers.Offset {
  A2fPlainAuthResult.startA2fPlainAuthResult(builder);
  A2fPlainAuthResult.addSuccessAuth(builder, successAuth);
  A2fPlainAuthResult.addSessionId(builder, sessionId);
  return A2fPlainAuthResult.endA2fPlainAuthResult(builder);
}
}
