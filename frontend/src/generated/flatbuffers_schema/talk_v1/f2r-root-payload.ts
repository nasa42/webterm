// automatically generated by the FlatBuffers compiler, do not modify

/* eslint-disable @typescript-eslint/no-unused-vars, @typescript-eslint/no-explicit-any, @typescript-eslint/no-non-null-assertion */

import { F2rError } from './f2r-error.js';
import { F2rToAgent } from './f2r-to-agent.js';


export enum F2rRootPayload {
  NONE = 0,
  Error = 1,
  ToAgent = 2
}

export function unionToF2rRootPayload(
  type: F2rRootPayload,
  accessor: (obj:F2rError|F2rToAgent) => F2rError|F2rToAgent|null
): F2rError|F2rToAgent|null {
  switch(F2rRootPayload[type]) {
    case 'NONE': return null; 
    case 'Error': return accessor(new F2rError())! as F2rError;
    case 'ToAgent': return accessor(new F2rToAgent())! as F2rToAgent;
    default: return null;
  }
}

export function unionListToF2rRootPayload(
  type: F2rRootPayload, 
  accessor: (index: number, obj:F2rError|F2rToAgent) => F2rError|F2rToAgent|null, 
  index: number
): F2rError|F2rToAgent|null {
  switch(F2rRootPayload[type]) {
    case 'NONE': return null; 
    case 'Error': return accessor(index, new F2rError())! as F2rError;
    case 'ToAgent': return accessor(index, new F2rToAgent())! as F2rToAgent;
    default: return null;
  }
}
