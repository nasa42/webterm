# Based on the example at https://release-plz.dev/docs/extra/releasing-binaries
name: release-binaries

permissions:
  contents: write

on:
  release:
    types: [ published ]

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_GIT_FETCH_WITH_CLI: true
  CARGO_NET_RETRY: 10
  CARGO_TERM_COLOR: always
  RUST_BACKTRACE: 1
  RUSTFLAGS: -D warnings
  RUSTUP_MAX_RETRIES: 10

defaults:
  run:
    shell: bash

jobs:
  upload-assets:
    name: ${{ matrix.target }}
    if: |
      github.repository_owner == 'nasa42' && (
        startsWith(github.event.release.name, 'webterm-relay') ||
        startsWith(github.event.release.name, 'webterm-agent')
      )
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          - target: aarch64-unknown-linux-gnu
            os: ubuntu-24.04
          - target: x86_64-unknown-linux-gnu
            os: ubuntu-24.04
    timeout-minutes: 60
    steps:
      - uses: actions/checkout@v4
      - name: Extract binary name
        run: |
          APP_BIN_NAME=$(echo "${{ github.event.release.name }}" | sed -E 's/-v[0-9].*//')
          if [[ ! "$APP_BIN_NAME" =~ ^webterm-(relay|agent)$ ]]; then
            echo "Error: Invalid binary name format: $APP_BIN_NAME from release ${{ github.event.release.name }}"
            exit 1
          fi
          echo "APP_BIN_NAME=${APP_BIN_NAME}" >> $GITHUB_ENV
      - name: Debug binary name
        run: |
          echo "Binary name is: ${{ env.APP_BIN_NAME }}"
      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@stable
      # - uses: taiki-e/setup-cross-toolchain-action@v1
      #   with:
      #     target: ${{ matrix.target }}
      #   if: startsWith(matrix.os, 'ubuntu') && !contains(matrix.target, '-musl')
      # - uses: taiki-e/install-action@cross
      #   if: contains(matrix.target, '-musl')
      # - run: echo "RUSTFLAGS=${RUSTFLAGS} -C target-feature=+crt-static" >> "${GITHUB_ENV}"
      #   if: endsWith(matrix.target, 'windows-msvc')
      - uses: taiki-e/upload-rust-binary-action@v1
        with:
          bin: ${{ env.APP_BIN_NAME }}
          target: ${{ matrix.target }}
          token: ${{ secrets.GITHUB_TOKEN }}
